{"version":3,"sources":["interfaces/interfaces.tsx","components/Item/index.tsx","components/Loader/index.tsx","services/apis/Items.js","pages/List/index.tsx","pages/Detail/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["STATUS","ORDER","OPTDAYS","COINS","useStyles","makeStyles","root","margin","padding","minWidth","backgroundColor","color","borderBottom","display","flexDirection","alignItems","imageIcon","width","currency","fontSize","fontWeight","icon","cursor","marginLeft","title","info","justifyContent","up","down","clickable","Item","coinInfo","setCoinsList","coinsList","index","name","image","price","pinned","changePct24hour","history","useHistory","goToDetail","push","togglePinned","newCoinsList","itemToUpdate","undefined","className","onClick","src","Tooltip","Loader","getItems","coinsOptions","a","options","join","url","axios","method","data","getSingleItem","coin","Data","minHeight","container","List","useState","NAME","orderBy","setOrderBy","isLoading","setIsLoading","useEffect","resp","Object","values","RAW","map","USD","getCurrencies","Container","maxWidth","Grid","component","spacing","item","Switch","value","defaultChecked","onChange","PRICE","sort","b","paddingTop","boxSizing","border","borderRadius","header","itemPrice","percentage","marginTop","valueData","marginBottom","infoItem","menu","backIcon","menuItem","textAlign","Detail","useParams","valuePastDays","WEEK","numberOfDays","setNumberOfDays","coinData","setCoinData","CoinInfo","Price","fullName","creationDate","blocksNumber","getCoinInfo","alt","MONTH","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95c2dd7d.chunk.js","sourcesContent":["export interface CoinsInfo {\r\n  name: string; \r\n  image: string; \r\n  price: number;\r\n  changePct24hour: number;\r\n  pinned: boolean;\r\n}\r\n\r\nexport interface CoinDetailInfo {\r\n  name: string;\r\n  fullName: string; \r\n  image: string; \r\n  price: number; \r\n  changePct24hour: number; //ver por que no esta en la otra\r\n  creationDate: Date; \r\n  blocksNumber: number;\r\n}\r\nexport enum STATUS {\r\n  LOADING = \"loading\",\r\n  COMPLETE = \"complete\",\r\n  ERROR = \"error\"\r\n}\r\n\r\nexport enum ORDER {\r\n  PRICE = \"price\",\r\n  NAME = \"name\"\r\n}\r\n\r\nexport enum OPTDAYS {\r\n  WEEK = 7,\r\n  MONTH = 30,\r\n}\r\nexport enum COINS{\r\n  BTC = \"BTC\",\r\n  ETC = \"ETC\",\r\n  ETH = \"ETH\",\r\n  XRP = \"XRP\",\r\n  ADA = \"ADA\",\r\n  LTC = \"LTC\",\r\n  TFUEL = \"TFUEL\",\r\n}","import { FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\r\nimport { CoinsInfo } from \"../../interfaces/interfaces\";\r\nimport { BrowserRouterProps, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"5px\",\r\n    padding: \"0px 10px\",\r\n    minWidth: \"350px\",\r\n    backgroundColor: \"#ffffff\",\r\n    color: \"#222626\",\r\n    borderBottom: '1px solid #B7CBCB',\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  imageIcon: {\r\n    width: \"40px\",\r\n  },\r\n  currency: {\r\n    color: \"#62BEB7\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 500,\r\n  },\r\n  icon: {\r\n    color: \"#B7CBCB\",\r\n    cursor: \"pointer\",\r\n    marginLeft: \"5px\",\r\n    width: \"32px\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"40%\",\r\n  },\r\n  info: {\r\n    width: \"60%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  up: {\r\n    color: \"#61ff61\",\r\n  },\r\n  down: {\r\n    color: \"#ff6161\",\r\n  },\r\n  clickable:{\r\n    cursor: 'pointer',\r\n  }\r\n});\r\n\r\ninterface ItemInfo {\r\n  coinInfo: CoinsInfo;\r\n  setCoinsList: Function;\r\n  coinsList: Array<CoinsInfo>;\r\n  index: number;\r\n}\r\n\r\nconst Item: FunctionComponent<ItemInfo> = ({\r\n  coinInfo,\r\n  setCoinsList,\r\n  coinsList,\r\n  index,\r\n}: ItemInfo) => {\r\n  const { root, imageIcon, currency, clickable, icon, title, info, up, down } =\r\n    useStyles();\r\n  const { name, image, price, pinned, changePct24hour } = coinInfo;\r\n  let history = useHistory();\r\n\r\n  const goToDetail = () => {\r\n    history.push(`/detail/${name}`);\r\n  };\r\n\r\n  const togglePinned = () => {\r\n    const newCoinsList: Array<CoinsInfo> = [...coinsList];\r\n    const itemToUpdate = newCoinsList[index];\r\n\r\n    if (itemToUpdate !== undefined) {\r\n      itemToUpdate.pinned = !itemToUpdate.pinned;\r\n      newCoinsList[index] = itemToUpdate;\r\n      setCoinsList(newCoinsList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={root}>\r\n        <section className={`${title} ${clickable}`} onClick={goToDetail}>\r\n          <img className={imageIcon} src={image} title={name} />\r\n          <h2>{name}</h2>\r\n        </section>\r\n        <section className={info}>\r\n          <section className={clickable} onClick={goToDetail}>\r\n            <span>\r\n              {(changePct24hour !== undefined && changePct24hour > 0) ? (\r\n                <TrendingUpIcon className={up} />\r\n              ) : (\r\n                <TrendingDownIcon className={down} />\r\n              )}\r\n            </span>\r\n            <span className={currency}>${price}</span>\r\n          </section>\r\n          {pinned ? (\r\n            <Tooltip title={`Unpin from the top`}>\r\n              <BookmarkIcon className={icon} onClick={() => togglePinned()} />\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title={`Pin to the top`}>\r\n              <BookmarkBorderIcon\r\n                className={icon}\r\n                onClick={() => togglePinned()}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import {FunctionComponent} from \"react\";\r\nimport './styles.css'\r\n\r\nconst Loader:FunctionComponent = () => {\r\n  return (\r\n    <div className=\"lds-dual-ring\"></div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nexport default async function getItems (coinsOptions) {\r\n  const options = coinsOptions.join();\r\n  const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${options}&tsyms=USD`;\r\n  try {\r\n    const { data } = await axios({\r\n      url,\r\n      method: \"GET\",\r\n    });\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\n\r\nasync function getSingleItem (coin) {\r\n  const url = `https://min-api.cryptocompare.com/data/blockchain/mining/calculator?fsyms=${coin}&tsyms=USD`\r\n  try {\r\n    const { data } = await axios({\r\n      url,\r\n      method: \"GET\",\r\n    });\r\n    return data.Data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport {\r\n  getSingleItem\r\n}\r\n","import React, { useEffect, useState, FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Item from \"../../components/Item\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CoinsInfo, ORDER } from \"../../interfaces/interfaces\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport getItems from \"../../services/apis/Items\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    color: \"#62BEB7\",\r\n  },\r\n});\r\n\r\nconst List: FunctionComponent = () => {\r\n  const { container, root, title } = useStyles();\r\n  const [coinsList, setCoinsList] = useState<Array<CoinsInfo>>([]);\r\n  const [orderBy, setOrderBy] = useState<ORDER>(ORDER.NAME);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const coinsOptions = [\"BTC\",\"ETC\",\"ETH\",\"XRP\",\"ADA\",\"TFUEL\"];\r\n\r\n  useEffect(() => {\r\n    const getCurrencies = async () => {\r\n      const data = await getItems(coinsOptions);\r\n        const resp: Array<CoinsInfo> = Object.values(data.RAW)\r\n          .map((currency: any) => currency.USD)\r\n          .map((coin: any) => ({\r\n            name: coin[\"FROMSYMBOL\"],\r\n            image: `https://www.cryptocompare.com${coin[\"IMAGEURL\"]}`,\r\n            price: coin[\"PRICE\"],\r\n            changePct24hour: coin[\"CHANGEPCT24HOUR\"],\r\n            pinned: false,\r\n          }));\r\n        setCoinsList(resp);\r\n        setIsLoading(false);\r\n    };\r\n    getCurrencies();\r\n  }, []);\r\n\r\n  const toggleOrderBy = () => {\r\n    setOrderBy(() => (orderBy === ORDER.NAME ? ORDER.PRICE : ORDER.NAME));\r\n  };\r\n\r\n  return (\r\n    <div className={root}>\r\n      <Container className={container} maxWidth={\"sm\"}>\r\n        <h1 className={title}>Cryptocurrency coins</h1>\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <section>\r\n              <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                <Grid item>Price</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    value={orderBy}\r\n                    color='default'\r\n                    defaultChecked\r\n                    onChange={toggleOrderBy}\r\n                  />\r\n                </Grid>\r\n                <Grid item>Name</Grid>\r\n              </Grid>\r\n            </section>\r\n            {coinsList != null &&\r\n              coinsList\r\n                .sort(function (a, b) {\r\n                  if (a[orderBy] < b[orderBy]) return -1;\r\n                  if (a[orderBy] > b[orderBy]) return 1;\r\n                  return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                  if (a.pinned > b.pinned) return -1;\r\n                  if (a.pinned < b.pinned) return 1;\r\n                  return 0;\r\n                })\r\n                .map((coinInfo, index) => {\r\n                  return (\r\n                    <Item\r\n                      key={index}\r\n                      index={index}\r\n                      coinInfo={coinInfo}\r\n                      setCoinsList={setCoinsList}\r\n                      coinsList={coinsList}\r\n                    />\r\n                  );\r\n                })}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { CoinDetailInfo, OPTDAYS } from \"../../interfaces/interfaces\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getSingleItem } from \"../../services/apis/Items\";\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    minWidth: \"100wh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"20px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  container: {\r\n    width: \"350px\",\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    border: \"1px solid #B7CBCB\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  imageIcon: {\r\n    width: \"50px\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 400,\r\n  },\r\n  itemPrice: {\r\n    fontSize: \"32px\",\r\n    fontWeight: 500,\r\n    margin: 0,\r\n  },\r\n  percentage: {\r\n    fontSize: \"18px\",\r\n    margin: 0,\r\n    marginTop: \"-5px\",\r\n    color: \"#62BEB7\",\r\n  },\r\n  info: {\r\n    fontSize: \"16px\",\r\n    margin: 0,\r\n  },\r\n  valueData: {\r\n    marginBottom: \"10px\",\r\n  },\r\n  infoItem: {\r\n    margin: \"0 0 5px 0\",\r\n    color: \"#959c9b\",\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    color: \"#B7CBCB\",\r\n    width: \"350px\",\r\n  },\r\n  backIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  menuItem: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\ninterface Coin {\r\n  coin: string;\r\n}\r\n\r\n//desestructurar coin\r\n//const Detail: FunctionComponent<CoinsInfo> = (coin: CoinsInfo) => {\r\nconst Detail: FunctionComponent = () => {\r\n  const { coin }: Coin = useParams();\r\n\r\n  const {\r\n    root,\r\n    menu,\r\n    menuItem,\r\n    backIcon,\r\n    container,\r\n    imageIcon,\r\n    infoItem,\r\n    valueData,\r\n    header,\r\n    title,\r\n    itemPrice,\r\n    percentage,\r\n    info,\r\n  } = useStyles();\r\n  const [valuePastDays, setValuePastDays] = useState<number>(3124);\r\n  const [numberOfDays, setNumberOfDays] = useState<OPTDAYS>(OPTDAYS.WEEK);\r\n  let history = useHistory();\r\n\r\n  const [coinData, setCoinData] = useState<CoinDetailInfo>();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const image = \"https://www.cryptocompare.com/media/37746251/btc.png\";\r\n  const name = \"BTC\";\r\n  const price = 4564;\r\n  const creationDate = 268101000;\r\n  const changePct24hour = 1.2;\r\n  const activeBlocks = 4558;\r\n\r\n  useEffect(() => {\r\n    const getCoinInfo = async (coin: string) => {\r\n      const data = await getSingleItem(coin);\r\n      const { CoinInfo, Price } = data[coin];\r\n      const resp: CoinDetailInfo = {\r\n        name: CoinInfo[\"Name\"],\r\n        fullName: CoinInfo[\"FullName\"],\r\n        image: `https://www.cryptocompare.com${CoinInfo[\"ImageUrl\"]}`,\r\n        price: Price[\"USD\"],\r\n        creationDate: CoinInfo[\"AssetLaunchDate\"],\r\n        blocksNumber: CoinInfo[\"BlockNumber\"],\r\n        changePct24hour: 1.2,\r\n      };\r\n      setCoinData(resp);\r\n      setIsLoading(false);\r\n    };\r\n    getCoinInfo(coin);\r\n  }, [coin]);\r\n  const toggleNumberOfDays = () => {\r\n    //obtener el nuevo valor\r\n    setNumberOfDays(() =>\r\n      numberOfDays === OPTDAYS.WEEK ? OPTDAYS.MONTH : OPTDAYS.WEEK\r\n    );\r\n  };\r\n\r\n  const convertDate = () => {\r\n    var myDate = new Date(creationDate * 1000);\r\n    return myDate.toLocaleDateString();\r\n  };\r\n  return (\r\n    <div className={root}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <section className={menu}>\r\n            <ArrowBackIosIcon\r\n              className={backIcon}\r\n              onClick={() => history.push(`/`)}\r\n            />\r\n            <h3 className={menuItem}>Information </h3>\r\n          </section>\r\n          <section className={container}>\r\n            <section className={header}>\r\n              <img\r\n                alt={`Coin icon from ${coinData?.name}`}\r\n                className={imageIcon}\r\n                src={coinData?.image}\r\n                title={coinData?.name}\r\n              />\r\n              <h2 className={title}>{coinData?.name}/USD</h2>\r\n            </section>\r\n            <section className={valueData}>\r\n              <p className={itemPrice}>${coinData?.price}</p>\r\n              <p className={percentage}>\r\n                {coinData != undefined && coinData?.changePct24hour >= 0 && `+`}\r\n                {coinData?.changePct24hour}% Today\r\n              </p>\r\n            </section>\r\n            <section className={info}>\r\n              <p className={infoItem}>\r\n                Creation date: {coinData?.creationDate}\r\n              </p>\r\n              <p className={infoItem}>\r\n                Active blocks: {coinData?.blocksNumber}\r\n              </p>\r\n              <p className={infoItem}>\r\n                Value from {numberOfDays} past days: {valuePastDays}{\" \"}\r\n              </p>\r\n              <Tooltip\r\n                title={`Switch to past ${\r\n                  numberOfDays === OPTDAYS.WEEK ? OPTDAYS.MONTH : OPTDAYS.WEEK\r\n                } days`}\r\n              >\r\n                <Switch\r\n                  defaultChecked\r\n                  color=\"default\"\r\n                  value={numberOfDays}\r\n                  onChange={toggleNumberOfDays}\r\n                />\r\n              </Tooltip>\r\n            </section>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* \r\n● A toggle that shows by default the value from the past 7 days\r\nand can switch to the past 30 days. */\r\n\r\nexport default Detail;\r\n","import React, { FunctionComponent } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport List from \"./pages/List\";\nimport Detail from \"./pages/Detail\";\n\nconst App: FunctionComponent = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={List} />\n      <Route path=\"/detail/:coin\" component={Detail} />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}