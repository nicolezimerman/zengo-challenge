{"version":3,"sources":["interfaces/interfaces.tsx","components/Item/index.tsx","components/Loader/index.tsx","services/apis/Items.tsx","pages/List/index.tsx","components/Chart/index.tsx","pages/Detail/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["STATUS","ORDER","OPTDAYS","COINS","useStyles","makeStyles","root","margin","padding","minWidth","backgroundColor","color","borderBottom","display","flexDirection","alignItems","imageIcon","width","currency","fontSize","fontWeight","icon","cursor","marginLeft","title","info","justifyContent","up","down","clickable","Item","coinInfo","setCoinsList","coinsList","index","name","image","price","pinned","changePct24hour","history","useHistory","goToDetail","push","togglePinned","newCoinsList","itemToUpdate","undefined","className","onClick","src","Tooltip","Loader","getItems","coinsOptions","a","options","join","url","axios","method","headers","authorization","process","data","resp","Object","values","RAW","map","USD","coin","getSingleItem","getBlockInformation","CoinInfo","Price","fullName","creationDate","blocksNumber","Data","getHistoricalByTime","numberOfDays","date","convertDate","Date","toDateString","minHeight","container","List","useState","NAME","orderBy","setOrderBy","isLoading","setIsLoading","useEffect","getCurrencies","Container","maxWidth","Grid","component","spacing","item","Switch","value","defaultChecked","onChange","PRICE","sort","b","Chart","chartInfo","LineChart","height","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Legend","Line","type","stroke","paddingTop","boxSizing","border","borderRadius","header","itemPrice","valueData","marginBottom","infoItem","menu","backIcon","menuItem","textAlign","Detail","useParams","coinData","setCoinData","setChartInfo","WEEK","setNumberOfDays","getCoinInfo","toggleNumberOfDays","MONTH","alt","App","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6a39853.chunk.js","sourcesContent":["export interface CoinsInfo {\r\n  name: string; \r\n  image: string; \r\n  price: number;\r\n  changePct24hour: number;\r\n  pinned: boolean;\r\n}\r\n\r\nexport interface CoinDetailInfo {\r\n  name: string;\r\n  fullName: string; \r\n  image: string; \r\n  price: number; \r\n  creationDate: Date; \r\n  blocksNumber: number;\r\n}\r\n\r\nexport interface ChartInfo {\r\n  date: string;\r\n  price: number;\r\n}\r\n\r\nexport enum STATUS {\r\n  LOADING = \"loading\",\r\n  COMPLETE = \"complete\",\r\n  ERROR = \"error\"\r\n}\r\n\r\nexport enum ORDER {\r\n  PRICE = \"price\",\r\n  NAME = \"name\"\r\n}\r\n\r\nexport enum OPTDAYS {\r\n  WEEK = 7,\r\n  MONTH = 30,\r\n}\r\nexport enum COINS{\r\n  BTC = \"BTC\",\r\n  ETC = \"ETC\",\r\n  ETH = \"ETH\",\r\n  XRP = \"XRP\",\r\n  ADA = \"ADA\",\r\n  LTC = \"LTC\",\r\n  TFUEL = \"TFUEL\",\r\n}","import { FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\r\nimport { CoinsInfo } from \"../../interfaces/interfaces\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"5px\",\r\n    padding: \"0px 10px\",\r\n    minWidth: \"350px\",\r\n    backgroundColor: \"#ffffff\",\r\n    color: \"#222626\",\r\n    borderBottom: '1px solid #B7CBCB',\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  imageIcon: {\r\n    width: \"40px\",\r\n  },\r\n  currency: {\r\n    color: \"#62BEB7\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 500,\r\n  },\r\n  icon: {\r\n    color: \"#B7CBCB\",\r\n    cursor: \"pointer\",\r\n    marginLeft: \"5px\",\r\n    width: \"32px\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"40%\",\r\n  },\r\n  info: {\r\n    width: \"60%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  up: {\r\n    color: \"#61ff61\",\r\n  },\r\n  down: {\r\n    color: \"#ff6161\",\r\n  },\r\n  clickable:{\r\n    cursor: 'pointer',\r\n  }\r\n});\r\n\r\ninterface ItemInfo {\r\n  coinInfo: CoinsInfo;\r\n  setCoinsList: Function;\r\n  coinsList: Array<CoinsInfo>;\r\n  index: number;\r\n}\r\n\r\nconst Item: FunctionComponent<ItemInfo> = ({\r\n  coinInfo,\r\n  setCoinsList,\r\n  coinsList,\r\n  index,\r\n}: ItemInfo) => {\r\n  const { root, imageIcon, currency, clickable, icon, title, info, up, down } =\r\n    useStyles();\r\n  const { name, image, price, pinned, changePct24hour } = coinInfo;\r\n  let history = useHistory();\r\n\r\n  const goToDetail = () => {\r\n    history.push(`/detail/${name}`);\r\n  };\r\n\r\n  const togglePinned = () => {\r\n    const newCoinsList: Array<CoinsInfo> = [...coinsList];\r\n    const itemToUpdate = newCoinsList[index];\r\n\r\n    if (itemToUpdate !== undefined) {\r\n      itemToUpdate.pinned = !itemToUpdate.pinned;\r\n      newCoinsList[index] = itemToUpdate;\r\n      setCoinsList(newCoinsList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={root}>\r\n        <section className={`${title} ${clickable}`} onClick={goToDetail}>\r\n          <img className={imageIcon} src={image} title={name} />\r\n          <h2>{name}</h2>\r\n        </section>\r\n        <section className={info}>\r\n          <section className={clickable} onClick={goToDetail}>\r\n            <span>\r\n              {(changePct24hour !== undefined && changePct24hour > 0) ? (\r\n                <TrendingUpIcon className={up} />\r\n              ) : (\r\n                <TrendingDownIcon className={down} />\r\n              )}\r\n            </span>\r\n            <span className={currency}>${price}</span>\r\n          </section>\r\n          {pinned ? (\r\n            <Tooltip title={`Unpin from the top`}>\r\n              <BookmarkIcon className={icon} onClick={() => togglePinned()} />\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title={`Pin to the top`}>\r\n              <BookmarkBorderIcon\r\n                className={icon}\r\n                onClick={() => togglePinned()}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import {FunctionComponent} from \"react\";\r\nimport './styles.css'\r\n\r\nconst Loader:FunctionComponent = () => {\r\n  return (\r\n    <div className=\"lds-dual-ring\"></div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\nimport { CoinsInfo, CoinDetailInfo, ChartInfo } from \"../../interfaces/interfaces\";\r\n\r\nconst getHeader = () => {\r\n  const apiKey = process.env.REACT_APP_APIKey;\r\n  return { authorization: apiKey };\r\n};\r\n\r\nasync function getItems(coinsOptions: Array<string>) {\r\n  const options = coinsOptions.join();\r\n  const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${options}&tsyms=USD`;\r\n  try {\r\n    const { data } = await axios({\r\n      url,\r\n      method: \"GET\",\r\n      headers: getHeader(),\r\n    });\r\n    const resp: Array<CoinsInfo> = Object.values(data.RAW)\r\n      .map((currency: any) => currency.USD)\r\n      .map((coin: any) => ({\r\n        name: coin[\"FROMSYMBOL\"],\r\n        image: `https://www.cryptocompare.com${coin[\"IMAGEURL\"]}`,\r\n        price: coin[\"PRICE\"],\r\n        changePct24hour: coin[\"CHANGEPCT24HOUR\"],\r\n        pinned: false,\r\n      }));\r\n    return resp;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nasync function getSingleItem(coin: string) {\r\n  const data = await getBlockInformation(coin);\r\n  const { CoinInfo, Price } = data[coin];\r\n  const resp: CoinDetailInfo = {\r\n    name: CoinInfo[\"Name\"],\r\n    fullName: CoinInfo[\"FullName\"],\r\n    image: `https://www.cryptocompare.com${CoinInfo[\"ImageUrl\"]}`,\r\n    price: Price[\"USD\"],\r\n    creationDate: CoinInfo[\"AssetLaunchDate\"],\r\n    blocksNumber: CoinInfo[\"BlockNumber\"],\r\n  };\r\n  return resp;\r\n}\r\n\r\nasync function getBlockInformation(coin: string) {\r\n  const url = `https://min-api.cryptocompare.com/data/blockchain/mining/calculator?fsyms=${coin}&tsyms=USD`;\r\n  try {\r\n    const { data } = await axios({\r\n      url,\r\n      method: \"GET\",\r\n      headers: getHeader(),\r\n    });\r\n    return data.Data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nasync function getHistoricalByTime(coin: string, numberOfDays: number) {\r\n  const url = `https://min-api.cryptocompare.com/data/v2/histoday?fsym=${coin}&tsym=USD&limit=${numberOfDays}&tryConversion=false&aggregate=1`;\r\n  try {\r\n    const { data } = await axios({\r\n      url,\r\n      method: \"GET\",\r\n      headers: getHeader(),\r\n    });\r\n    const info: any = data.Data.Data;\r\n\r\n    const resp: Array<ChartInfo> = Object.values(info)\r\n      .map((date: any) => ({\r\n        date: convertDate(date[\"time\"]),\r\n        price: date[\"close\"],\r\n      }));\r\n    return resp;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction convertDate(date : number){\r\n  var myDate = new Date( date *1000);\r\n  return myDate.toDateString();\r\n}\r\n\r\n\r\n\r\nexport { getItems, getSingleItem, getHistoricalByTime };\r\n","import React, { useEffect, useState, FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Item from \"../../components/Item\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CoinsInfo, ORDER } from \"../../interfaces/interfaces\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {getItems} from \"../../services/apis/Items\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    color: \"#62BEB7\",\r\n  },\r\n});\r\n\r\nconst List: FunctionComponent = () => {\r\n  const { container, root, title } = useStyles();\r\n  const [coinsList, setCoinsList] = useState<Array<CoinsInfo>>([]);\r\n  const [orderBy, setOrderBy] = useState<ORDER>(ORDER.NAME);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const coinsOptions = [\"BTC\",\"ETC\",\"ETH\",\"XRP\",\"ADA\",\"TFUEL\"];\r\n\r\n  useEffect(() => {\r\n    const getCurrencies = async () => {\r\n      const resp: Array<CoinsInfo> = await getItems(coinsOptions);\r\n      setCoinsList(resp);\r\n      setIsLoading(false);\r\n    };\r\n    getCurrencies();\r\n  }, []);\r\n\r\n  const toggleOrderBy = () => {\r\n    setOrderBy(() => (orderBy === ORDER.NAME ? ORDER.PRICE : ORDER.NAME));\r\n  };\r\n\r\n  return (\r\n    <div className={root}>\r\n      <Container className={container} maxWidth={\"sm\"}>\r\n        <h1 className={title}>Cryptocurrency coins</h1>\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <section>\r\n              <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                <Grid item>Price</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    value={orderBy}\r\n                    color='default'\r\n                    defaultChecked\r\n                    onChange={toggleOrderBy}\r\n                  />\r\n                </Grid>\r\n                <Grid item>Name</Grid>\r\n              </Grid>\r\n            </section>\r\n            {coinsList != null &&\r\n              coinsList\r\n                .sort(function (a, b) {\r\n                  if (a[orderBy] < b[orderBy]) return -1;\r\n                  if (a[orderBy] > b[orderBy]) return 1;\r\n                  return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                  if (a.pinned > b.pinned) return -1;\r\n                  if (a.pinned < b.pinned) return 1;\r\n                  return 0;\r\n                })\r\n                .map((coinInfo, index) => {\r\n                  return (\r\n                    <Item\r\n                      key={index}\r\n                      index={index}\r\n                      coinInfo={coinInfo}\r\n                      setCoinsList={setCoinsList}\r\n                      coinsList={coinsList}\r\n                    />\r\n                  );\r\n                })}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { FunctionComponent } from \"react\";\r\nimport { ChartInfo } from \"../../interfaces/interfaces\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\ninterface ChartProps {\r\n  chartInfo: ChartInfo[];\r\n}\r\n\r\nconst Chart = ({ chartInfo }: ChartProps) => {\r\n  return <LineChart\r\n      width={350}\r\n      height={200}\r\n      data={chartInfo}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"date\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"price\" stroke=\"#82ca9d\" />\r\n    </LineChart>\r\n};\r\n\r\nexport default Chart;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { CoinDetailInfo, OPTDAYS, ChartInfo } from \"../../interfaces/interfaces\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getSingleItem, getHistoricalByTime } from \"../../services/apis/Items\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Chart from \"../../components/Chart\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    minWidth: \"100wh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"20px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  container: {\r\n    width: \"350px\",\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    border: \"1px solid #B7CBCB\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  imageIcon: {\r\n    width: \"50px\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 400,\r\n  },\r\n  itemPrice: {\r\n    fontSize: \"32px\",\r\n    fontWeight: 500,\r\n    margin: 0,\r\n  },\r\n  info: {\r\n    fontSize: \"16px\",\r\n    margin: 0,\r\n  },\r\n  valueData: {\r\n    marginBottom: \"10px\",\r\n    color: \"#62BEB7\",\r\n  },\r\n  infoItem: {\r\n    margin: \"0 0 5px 0\",\r\n    color: \"#959c9b\",\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    color: \"#B7CBCB\",\r\n    width: \"350px\",\r\n  },\r\n  backIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  menuItem: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\ninterface Coin {\r\n  coin: string;\r\n}\r\n\r\nconst Detail: FunctionComponent = () => {\r\n  const { coin }: Coin = useParams();\r\n\r\n  const {\r\n    root,\r\n    menu,\r\n    menuItem,\r\n    backIcon,\r\n    container,\r\n    imageIcon,\r\n    infoItem,\r\n    valueData,\r\n    header,\r\n    title,\r\n    itemPrice,\r\n    info,\r\n  } = useStyles();\r\n\r\n  let history = useHistory();\r\n\r\n  const [coinData, setCoinData] = useState<CoinDetailInfo>();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [chartInfo, setChartInfo] = useState<ChartInfo[]>([]);\r\n  const [numberOfDays, setNumberOfDays] = useState<OPTDAYS>(OPTDAYS.WEEK);\r\n\r\n  useEffect(() => {\r\n    const getCoinInfo = async (coin: string) => {\r\n      const resp: CoinDetailInfo = await getSingleItem(coin);\r\n      const data : ChartInfo[] = await getHistoricalByTime(coin,numberOfDays);\r\n      setCoinData(resp);\r\n      setChartInfo(data);\r\n      setIsLoading(false);\r\n    };\r\n    getCoinInfo(coin);\r\n  }, [coin]);\r\n\r\n  const toggleNumberOfDays = async() => {\r\n    setNumberOfDays(() =>\r\n      numberOfDays === OPTDAYS.WEEK ? OPTDAYS.MONTH : OPTDAYS.WEEK\r\n    );\r\n    const data : ChartInfo[] = await getHistoricalByTime(coin,numberOfDays === OPTDAYS.WEEK ? OPTDAYS.MONTH : OPTDAYS.WEEK);\r\n    setChartInfo(data);\r\n    \r\n  };\r\n  return (\r\n    <div className={root}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <section className={menu}>\r\n            <ArrowBackIosIcon\r\n              className={backIcon}\r\n              onClick={() => history.push(`/`)}\r\n            />\r\n            <h3 className={menuItem}>Information</h3>\r\n          </section>\r\n          <section className={container}>\r\n            <section className={header}>\r\n              <img\r\n                alt={`Coin icon from ${coinData?.name}`}\r\n                className={imageIcon}\r\n                src={coinData?.image}\r\n                title={coinData?.name}\r\n              />\r\n              <h2 className={title}>{coinData?.name}/USD</h2>\r\n            </section>\r\n            <section className={valueData}>\r\n              <p className={itemPrice}>${coinData?.price}</p>\r\n            </section>\r\n            <section className={info}>\r\n              <p className={infoItem}>\r\n                Creation date: {coinData?.creationDate}\r\n              </p>\r\n              <p className={infoItem}>\r\n                Active blocks: {coinData?.blocksNumber}\r\n              </p>\r\n              <p className={infoItem}>\r\n                Value from {numberOfDays} past days:\r\n              <Tooltip\r\n                title={`Switch to past ${\r\n                  numberOfDays === OPTDAYS.WEEK ? OPTDAYS.MONTH : OPTDAYS.WEEK\r\n                } days`}\r\n              >\r\n                <Switch\r\n                  defaultChecked\r\n                  color=\"default\"\r\n                  value={numberOfDays}\r\n                  onChange={toggleNumberOfDays}\r\n                />\r\n              </Tooltip>\r\n              </p>\r\n              <Chart chartInfo={chartInfo} />\r\n            </section>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* \r\n● A toggle that shows by default the value from the past 7 days\r\nand can switch to the past 30 days. */\r\n\r\nexport default Detail;\r\n","import React, { FunctionComponent } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport List from \"./pages/List\";\nimport Detail from \"./pages/Detail\";\n\nconst App: FunctionComponent = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={List} />\n      <Route path=\"/detail/:coin\" component={Detail} />\n      <Redirect to=\"/\" />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}